{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/goshi/portfolio_web_R/portfolio/app/components/PhotoCard.jsx"],"sourcesContent":["export default function PhotoCard({ src, onClick, onLoad, isLocal, postUrl }) {\n  // isLocal === true => クリックでモーダル拡大\n  // isLocal === false => クリックで postUrl に飛ぶ\n  // (既存実装に準拠)\n\n  const handleClick = () => {\n    if (isLocal) {\n      onClick && onClick(src);\n    } else {\n      window.open(postUrl, \"_blank\");\n    }\n  };\n\n  return (\n    <div className=\"aspect-square overflow-hidden\">\n      <img\n        src={src}\n        alt=\"\"\n        className=\"object-cover w-full h-full\"\n        onLoad={onLoad}   // ← ここで読み込み完了を検知\n        onError={onLoad}  // 画像読み込み失敗時もカウント(必要なら)\n        onClick={handleClick}\n      />\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAAe,SAAS,UAAU,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE;IAC1E,kCAAkC;IAClC,yCAAyC;IACzC,YAAY;IAEZ,MAAM,cAAc;QAClB,IAAI,SAAS;YACX,WAAW,QAAQ;QACrB,OAAO;YACL,OAAO,IAAI,CAAC,SAAS;QACvB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,KAAI;YACJ,WAAU;YACV,QAAQ;YACR,SAAS;YACT,SAAS;;;;;;;;;;;AAIjB"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///Users/goshi/portfolio_web_R/portfolio/app/photo/PhotoGrid.jsx"],"sourcesContent":["\"use client\";\nimport React, { useState } from \"react\";\nimport PhotoCard from \"../components/PhotoCard\";\n\nexport default function PhotoGrid({ images }) {\n  const totalImages = images.length;\n  const [loadedCount, setLoadedCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // 画像が1枚読み込まれるたびに呼び出す\n  const handleImageLoad = () => {\n    setLoadedCount((prev) => prev + 1);\n  };\n\n  // 全画像が読み込まれたらロード画面を消す\n  useEffect(() => {\n    if (loadedCount === totalImages) {\n      setIsLoading(false);\n    }\n  }, [loadedCount, totalImages]);\n\n  // ロード中のパーセント (0% ~ 100%)\n  const progressPercent = Math.floor((loadedCount / totalImages) * 100);\n\n  return (\n    <div className=\"relative\">\n      {/*\n        ロード画面 (オーバーレイ)\n        - isLoading が true の間だけ表示\n        - 画面全体を覆う: fixed or absolute + inset-0\n      */}\n      {isLoading && (\n        <div className=\"\n          fixed inset-0 \n          flex flex-col items-center justify-center\n          bg-black\n          z-50\n        \">\n          <p className=\"text-white text-2xl mb-4\">\n            {progressPercent}%\n          </p>\n          <div className=\"w-64 h-2 bg-white\">\n            {/*\n              白いゲージの上に黒や別の色を重ねる場合もありますが、\n              ここでは単純に幅を変化させてゲージっぽく表示\n            */}\n            <div\n              className=\"bg-black h-full\"\n              style={{ width: `${progressPercent}%` }}\n            />\n          </div>\n        </div>\n      )}\n\n      {/*\n        画像一覧を表示\n        既存のギャラリー実装を変更しないように工夫\n        handleImageLoad を仕込んで読み込み完了を検知\n      */}\n      <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4 p-4\">\n        {images.map((item, idx) => {\n          // PhotoCard 内部の <img> に onLoad を仕込む or\n          // ここで直接 <img> を表示するか\n          // 既存の構造を崩さないために、PhotoCardに onLoad を渡します。\n\n          if (item.isLocal) {\n            return (\n              <PhotoCard\n                key={idx}\n                src={item.src}\n                onLoad={handleImageLoad} \n                // ローカル画像なのでモーダル拡大など既存機能を維持\n                isLocal={true}\n              />\n            );\n          } else {\n            // X画像 → クリックでポストURLへジャンプ (既存実装)\n            return (\n              <PhotoCard\n                key={idx}\n                src={item.src}\n                onLoad={handleImageLoad}\n                isLocal={false}\n                postUrl={item.postUrl}\n              />\n            );\n          }\n        })}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIe,SAAS,UAAU,EAAE,MAAM,EAAE;IAC1C,MAAM,cAAc,OAAO,MAAM;IACjC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,qBAAqB;IACrB,MAAM,kBAAkB;QACtB,eAAe,CAAC,OAAS,OAAO;IAClC;IAEA,sBAAsB;IACtB,UAAU;QACR,IAAI,gBAAgB,aAAa;YAC/B,aAAa;QACf;IACF,GAAG;QAAC;QAAa;KAAY;IAE7B,yBAAyB;IACzB,MAAM,kBAAkB,KAAK,KAAK,CAAC,AAAC,cAAc,cAAe;IAEjE,qBACE,8OAAC;QAAI,WAAU;;YAMZ,2BACC,8OAAC;gBAAI,WAAU;;kCAMb,8OAAC;wBAAE,WAAU;;4BACV;4BAAgB;;;;;;;kCAEnB,8OAAC;wBAAI,WAAU;kCAKb,cAAA,8OAAC;4BACC,WAAU;4BACV,OAAO;gCAAE,OAAO,GAAG,gBAAgB,CAAC,CAAC;4BAAC;;;;;;;;;;;;;;;;;0BAW9C,8OAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAC,MAAM;oBACjB,uCAAuC;oBACvC,qBAAqB;oBACrB,yCAAyC;oBAEzC,IAAI,KAAK,OAAO,EAAE;wBAChB,qBACE,8OAAC,+HAAA,CAAA,UAAS;4BAER,KAAK,KAAK,GAAG;4BACb,QAAQ;4BACR,2BAA2B;4BAC3B,SAAS;2BAJJ;;;;;oBAOX,OAAO;wBACL,gCAAgC;wBAChC,qBACE,8OAAC,+HAAA,CAAA,UAAS;4BAER,KAAK,KAAK,GAAG;4BACb,QAAQ;4BACR,SAAS;4BACT,SAAS,KAAK,OAAO;2BAJhB;;;;;oBAOX;gBACF;;;;;;;;;;;;AAIR"}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}